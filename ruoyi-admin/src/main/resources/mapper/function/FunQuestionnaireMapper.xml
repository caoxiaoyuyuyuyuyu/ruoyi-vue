<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.function.mapper.FunQuestionnaireMapper">
    
    <resultMap type="FunQuestionnaire" id="FunQuestionnaireResult">
        <result property="id"    column="id"    />
        <result property="anonymous"    column="anonymous"    />
        <result property="type"    column="type"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
    </resultMap>

    <resultMap id="FunQuestionnaireFunQuestionResult" type="FunQuestionnaire" extends="FunQuestionnaireResult">
        <collection property="funQuestionList" ofType="FunQuestion" column="id" select="selectFunQuestionList" />
    </resultMap>

    <resultMap type="FunQuestion" id="FunQuestionResult">
        <result property="id"    column="id"    />
        <result property="type"    column="type"    />
        <result property="name"    column="name"    />
        <result property="description"    column="description"    />
        <result property="content"    column="content"    />
        <result property="questionnaireId"    column="questionnaire_id"    />
    </resultMap>

    <sql id="selectFunQuestionnaireVo">
        select id, anonymous, type, name, description, start_time, end_time from questionnaire
    </sql>

    <select id="selectFunQuestionnaireList" parameterType="FunQuestionnaire" resultMap="FunQuestionnaireResult">
        <include refid="selectFunQuestionnaireVo"/>
        <where>  
            <if test="anonymous != null  and anonymous != ''"> and anonymous = #{anonymous}</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="description != null  and description != ''"> and description like concat('%', #{description}, '%')</if>
            <if test="params.beginStartTime != null and params.beginStartTime != '' and params.endStartTime != null and params.endStartTime != ''"> and start_time between #{params.beginStartTime} and #{params.endStartTime}</if>
            <if test="params.beginEndTime != null and params.beginEndTime != '' and params.endEndTime != null and params.endEndTime != ''"> and end_time between #{params.beginEndTime} and #{params.endEndTime}</if>
        </where>
    </select>
    
    <select id="selectFunQuestionnaireById" parameterType="Long" resultMap="FunQuestionnaireFunQuestionResult">
        select id, anonymous, type, name, description, start_time, end_time
        from questionnaire
        where id = #{id}
    </select>

    <select id="selectFunQuestionList" resultMap="FunQuestionResult">
        select id, type, name, description, content, questionnaire_id
        from question
        where questionnaire_id = #{questionnaire_id}
    </select>

    <insert id="insertFunQuestionnaire" parameterType="FunQuestionnaire" useGeneratedKeys="true" keyProperty="id">
        insert into questionnaire
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="anonymous != null and anonymous != ''">anonymous,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="description != null">description,</if>
            <if test="startTime != null and startTime != ''">start_time,</if>
            <if test="endTime != null and endTime != ''">end_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="anonymous != null and anonymous != ''">#{anonymous},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="description != null">#{description},</if>
            <if test="startTime != null and startTime != ''">#{startTime},</if>
            <if test="endTime != null and endTime != ''">#{endTime},</if>
         </trim>
    </insert>

    <update id="updateFunQuestionnaire" parameterType="FunQuestionnaire">
        update questionnaire
        <trim prefix="SET" suffixOverrides=",">
            <if test="anonymous != null and anonymous != ''">anonymous = #{anonymous},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="startTime != null and startTime != ''">start_time = #{startTime},</if>
            <if test="endTime != null and endTime != ''">end_time = #{endTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteFunQuestionnaireById" parameterType="Long">
        delete from questionnaire where id = #{id}
    </delete>

    <delete id="deleteFunQuestionnaireByIds" parameterType="String">
        delete from questionnaire where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
    <delete id="deleteFunQuestionByQuestionnaireIds" parameterType="String">
        delete from question where questionnaire_id in 
        <foreach item="questionnaireId" collection="array" open="(" separator="," close=")">
            #{questionnaireId}
        </foreach>
    </delete>

    <delete id="deleteFunQuestionByQuestionnaireId" parameterType="Long">
        delete from question where questionnaire_id = #{questionnaireId}
    </delete>

    <insert id="batchFunQuestion">
        insert into question( id, type, name, description, content, questionnaire_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.type}, #{item.name}, #{item.description}, #{item.content}, #{item.questionnaireId})
        </foreach>
    </insert>
</mapper>
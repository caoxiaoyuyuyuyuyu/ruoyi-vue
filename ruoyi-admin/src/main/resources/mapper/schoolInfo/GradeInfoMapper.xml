<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.schoolInfo.mapper.GradeInfoMapper">
    
    <resultMap type="GradeInfo" id="GradeInfoResult">
        <result property="gradeId"    column="grade_id"    />
        <result property="gradeName"    column="grade_name"    />
        <result property="campusId"    column="campus_id"    />
    </resultMap>

    <resultMap id="GradeInfoCollegeInfoResult" type="GradeInfo" extends="GradeInfoResult">
        <collection property="collegeInfoList" ofType="CollegeInfo" column="grade_id" select="selectCollegeInfoList" />
    </resultMap>

    <resultMap type="CollegeInfo" id="CollegeInfoResult">
        <result property="collegeId"    column="college_id"    />
        <result property="collegeName"    column="college_name"    />
        <result property="gradeId"    column="grade_id"    />
    </resultMap>

    <sql id="selectGradeInfoVo">
        select grade_id, grade_name, campus_id from grade_info
    </sql>

    <select id="selectGradeInfoList" parameterType="GradeInfo" resultMap="GradeInfoResult">
        <include refid="selectGradeInfoVo"/>
        <where>  
            <if test="gradeId != null "> and grade_id = #{gradeId}</if>
            <if test="gradeName != null  and gradeName != ''"> and grade_name like concat('%', #{gradeName}, '%')</if>
            <if test="campusId != null "> and campus_id = #{campusId}</if>
        </where>
    </select>
    
    <select id="selectGradeInfoByGradeId" parameterType="Long" resultMap="GradeInfoCollegeInfoResult">
        select grade_id, grade_name, campus_id
        from grade_info
        where grade_id = #{gradeId}
    </select>

    <select id="selectCollegeInfoList" resultMap="CollegeInfoResult">
        select college_id, college_name, grade_id
        from college_info
        where grade_id = #{grade_id}
    </select>

    <insert id="insertGradeInfo" parameterType="GradeInfo" useGeneratedKeys="true" keyProperty="gradeId">
        insert into grade_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">grade_name,</if>
            <if test="campusId != null">campus_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">#{gradeName},</if>
            <if test="campusId != null">#{campusId},</if>
         </trim>
    </insert>

    <update id="updateGradeInfo" parameterType="GradeInfo">
        update grade_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="gradeName != null and gradeName != ''">grade_name = #{gradeName},</if>
            <if test="campusId != null">campus_id = #{campusId},</if>
        </trim>
        where grade_id = #{gradeId}
    </update>

    <delete id="deleteGradeInfoByGradeId" parameterType="Long">
        delete from grade_info where grade_id = #{gradeId}
    </delete>

    <delete id="deleteGradeInfoByGradeIds" parameterType="String">
        delete from grade_info where grade_id in 
        <foreach item="gradeId" collection="array" open="(" separator="," close=")">
            #{gradeId}
        </foreach>
    </delete>
    
    <delete id="deleteCollegeInfoByGradeIds" parameterType="String">
        delete from college_info where grade_id in 
        <foreach item="gradeId" collection="array" open="(" separator="," close=")">
            #{gradeId}
        </foreach>
    </delete>

    <delete id="deleteCollegeInfoByGradeId" parameterType="Long">
        delete from college_info where grade_id = #{gradeId}
    </delete>

    <insert id="batchCollegeInfo">
        insert into college_info( college_id, college_name, grade_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.collegeId}, #{item.collegeName}, #{item.gradeId})
        </foreach>
    </insert>
</mapper>
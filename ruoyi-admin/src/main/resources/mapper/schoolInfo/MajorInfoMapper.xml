<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.schoolInfo.mapper.MajorInfoMapper">
    
    <resultMap type="MajorInfo" id="MajorInfoResult">
        <result property="majorId"    column="major_id"    />
        <result property="majorName"    column="major_name"    />
        <result property="collegeId"    column="college_id"    />
    </resultMap>

    <resultMap id="MajorInfoClassInfoResult" type="MajorInfo" extends="MajorInfoResult">
        <collection property="classInfoList" ofType="ClassInfo" column="major_id" select="selectClassInfoList" />
    </resultMap>

    <resultMap type="ClassInfo" id="ClassInfoResult">
        <result property="classId"    column="class_id"    />
        <result property="className"    column="class_name"    />
        <result property="majorId"    column="major_id"    />
    </resultMap>

    <sql id="selectMajorInfoVo">
        select major_id, major_name, college_id from major_info
    </sql>

    <select id="selectMajorInfoList" parameterType="MajorInfo" resultMap="MajorInfoResult">
        <include refid="selectMajorInfoVo"/>
        <where>  
            <if test="majorId != null "> and major_id = #{majorId}</if>
            <if test="majorName != null  and majorName != ''"> and major_name like concat('%', #{majorName}, '%')</if>
            <if test="collegeId != null "> and college_id = #{collegeId}</if>
        </where>
    </select>
    
    <select id="selectMajorInfoByMajorId" parameterType="Long" resultMap="MajorInfoClassInfoResult">
        select major_id, major_name, college_id
        from major_info
        where major_id = #{majorId}
    </select>

    <select id="selectClassInfoList" resultMap="ClassInfoResult">
        select class_id, class_name, major_id
        from class_info
        where major_id = #{major_id}
    </select>

    <insert id="insertMajorInfo" parameterType="MajorInfo" useGeneratedKeys="true" keyProperty="majorId">
        insert into major_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">major_name,</if>
            <if test="collegeId != null">college_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">#{majorName},</if>
            <if test="collegeId != null">#{collegeId},</if>
         </trim>
    </insert>

    <update id="updateMajorInfo" parameterType="MajorInfo">
        update major_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="majorName != null and majorName != ''">major_name = #{majorName},</if>
            <if test="collegeId != null">college_id = #{collegeId},</if>
        </trim>
        where major_id = #{majorId}
    </update>

    <delete id="deleteMajorInfoByMajorId" parameterType="Long">
        delete from major_info where major_id = #{majorId}
    </delete>

    <delete id="deleteMajorInfoByMajorIds" parameterType="String">
        delete from major_info where major_id in 
        <foreach item="majorId" collection="array" open="(" separator="," close=")">
            #{majorId}
        </foreach>
    </delete>
    
    <delete id="deleteClassInfoByMajorIds" parameterType="String">
        delete from class_info where major_id in 
        <foreach item="majorId" collection="array" open="(" separator="," close=")">
            #{majorId}
        </foreach>
    </delete>

    <delete id="deleteClassInfoByMajorId" parameterType="Long">
        delete from class_info where major_id = #{majorId}
    </delete>

    <insert id="batchClassInfo">
        insert into class_info( class_id, class_name, major_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.classId}, #{item.className}, #{item.majorId})
        </foreach>
    </insert>
</mapper>